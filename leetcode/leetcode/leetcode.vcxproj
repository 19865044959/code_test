<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{5400AF50-5E2C-41DE-99C3-33180E9692F8}</ProjectGuid>
    <RootNamespace>leetcode</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="(难)220. 存在重复元素 III.cpp" />
    <ClCompile Include="0-1背包问题.cpp" />
    <ClCompile Include="1. 两数之和.cpp" />
    <ClCompile Include="1310. 子数组异或查询.cpp" />
    <ClCompile Include="136. 只出现一次的数字.cpp" />
    <ClCompile Include="137. 只出现一次的数字 II.cpp" />
    <ClCompile Include="142. 环形链表 II.cpp" />
    <ClCompile Include="148. 排序链表.cpp" />
    <ClCompile Include="1482. 制作 m 束花所需的最少天数.cpp" />
    <ClCompile Include="152. 乘积最大子数组.cpp" />
    <ClCompile Include="160. 相交链表.cpp" />
    <ClCompile Include="17. 电话号码的字母组合.cpp" />
    <ClCompile Include="1734. 解码异或后的排列.cpp" />
    <ClCompile Include="216. 组合总和 III.cpp" />
    <ClCompile Include="22. 括号生成.cpp" />
    <ClCompile Include="3. 无重复字符的最长子串.cpp" />
    <ClCompile Include="32. 最长有效括号.cpp" />
    <ClCompile Include="322. 零钱兑换.cpp" />
    <ClCompile Include="33. 搜索旋转排序数组.cpp" />
    <ClCompile Include="338. 比特位计数.cpp" />
    <ClCompile Include="347. 前 K 个高频元素.cpp" />
    <ClCompile Include="363. 矩形区域不超过 K 的最大数值和.cpp" />
    <ClCompile Include="40. 组合总和 II.cpp" />
    <ClCompile Include="403. 青蛙过河.cpp" />
    <ClCompile Include="437. 路径总和 III.cpp" />
    <ClCompile Include="438. 找到字符串中所有字母异位词.cpp" />
    <ClCompile Include="448. 找到所有数组中消失的数字.cpp" />
    <ClCompile Include="46. 全排列.cpp" />
    <ClCompile Include="49. 字母异位词分组.cpp" />
    <ClCompile Include="494. 目标和.cpp" />
    <ClCompile Include="538. 把二叉搜索树转换为累加树.cpp" />
    <ClCompile Include="543. 二叉树的直径.cpp" />
    <ClCompile Include="554. 砖墙.cpp" />
    <ClCompile Include="560. 和为K的子数组.cpp" />
    <ClCompile Include="581. 最短无序连续子数组.cpp" />
    <ClCompile Include="690. 员工的重要性.cpp" />
    <ClCompile Include="739. 每日温度.cpp" />
    <ClCompile Include="740. 删除并获得点数.cpp" />
    <ClCompile Include="84. 柱状图中最大的矩形.cpp" />
    <ClCompile Include="91. 解码方法%28跳台阶升级版%29.cpp" />
    <ClCompile Include="ali1.cpp" />
    <ClCompile Include="ali2.cpp" />
    <ClCompile Include="JD1.cpp" />
    <ClCompile Include="JD2.cpp" />
    <ClCompile Include="m×n图像旋转(一维数组).cpp" />
    <ClCompile Include="TX1.cpp" />
    <ClCompile Include="TX3.cpp" />
    <ClCompile Include="TX4.cpp" />
    <ClCompile Include="n×n图像旋转%28一维数组%29.cpp" />
    <ClCompile Include="二分查找详解.cpp" />
    <ClCompile Include="位运算常见结论总结.cpp" />
    <ClCompile Include="字节 - 升序数组.cpp" />
    <ClCompile Include="字节1.cpp" />
    <ClCompile Include="字节2.cpp" />
    <ClCompile Include="字节3.cpp" />
    <ClCompile Include="字节4.cpp" />
    <ClCompile Include="实现my_priority_queue.cpp" />
    <ClCompile Include="线段树.cpp" />
    <ClCompile Include="美团1.cpp" />
    <ClCompile Include="102. 二叉树的层序遍历.cpp" />
    <ClCompile Include="美团2.cpp" />
    <ClCompile Include="TX2.cpp" />
    <ClCompile Include="23. 合并K个升序链表.cpp" />
    <ClCompile Include="美团3.cpp" />
    <ClCompile Include="Trie(字典树).cpp" />
    <ClCompile Include="[2]103. 二叉树的锯齿形层序遍历.cpp" />
    <ClCompile Include="128. 最长连续序列.cpp" />
    <ClCompile Include="139. 单词拆分.cpp" />
    <ClCompile Include="1层序遍历套路.cpp" />
    <ClCompile Include="209. 长度最小的子数组.cpp" />
    <ClCompile Include="274. H 指数.cpp" />
    <ClCompile Include="275. H 指数 II.cpp" />
    <ClCompile Include="3.31第一次笔试.cpp" />
    <ClCompile Include="300. 最长递增子序列.cpp" />
    <ClCompile Include="337. 打家劫舍 III.cpp" />
    <ClCompile Include="5. 最长回文子串.cpp" />
    <ClCompile Include="684. 冗余连接.cpp" />
    <ClCompile Include="74. 搜索二维矩阵.cpp" />
    <ClCompile Include="96. 不同的二叉搜索树.cpp" />
    <ClCompile Include="Astar.cpp" />
    <ClCompile Include="gcd.cpp" />
    <ClCompile Include="HJ16 购物单.cpp" />
    <ClCompile Include="HJ19 简单错误记录[考察链表的应用].cpp" />
    <ClCompile Include="HJ20  密码验证合格程序.cpp" />
    <ClCompile Include="HJ31 单词倒排.cpp" />
    <ClCompile Include="HJ43 迷宫问题[dijkstra算法、dfs、bfs].cpp" />
    <ClCompile Include="HJ48 从单向链表中删除指定值的节点.cpp" />
    <ClCompile Include="HJ6 质数因子[难].cpp" />
    <ClCompile Include="HJ64 MP3光标位置.cpp" />
    <ClCompile Include="mergeSort.cpp" />
    <ClCompile Include="unionFind.cpp" />
    <ClCompile Include="[2]226. 翻转二叉树.cpp" />
    <ClCompile Include="[2]100. 相同的树.cpp" />
    <ClCompile Include="[2×]101. 对称二叉树.cpp" />
    <ClCompile Include="1013. 将数组分成和相等的三个部分.cpp" />
    <ClCompile Include="1014. 最佳观光组合.cpp" />
    <ClCompile Include="1030. 距离顺序排列矩阵单元格.cpp" />
    <ClCompile Include="[2×]104. 二叉树的最大深度.cpp" />
    <ClCompile Include="[2×]105. 从前序与中序遍历序列构造二叉树.cpp" />
    <ClCompile Include="[2]106. 从中序与后序遍历序列构造二叉树.cpp" />
    <ClCompile Include="[2]108. 将有序数组转换为二叉搜索树.cpp" />
    <ClCompile Include="[2]109. 有序链表转换二叉搜索树.cpp" />
    <ClCompile Include="11. 盛最多水的容器.cpp" />
    <ClCompile Include="[2]110. 平衡二叉树.cpp" />
    <ClCompile Include="[2]111. 二叉树的最小深度.cpp" />
    <ClCompile Include="[2×]112. 路径总和113 124 129.cpp" />
    <ClCompile Include="[2]113. 路径总和 II.cpp" />
    <ClCompile Include="[2×]114. 二叉树展开为链表.cpp" />
    <ClCompile Include="[2]116. 填充每个节点的下一个右侧节点指针.cpp" />
    <ClCompile Include="1160. 拼写单词.cpp" />
    <ClCompile Include="118. 杨辉三角.cpp" />
    <ClCompile Include="120. 三角形最小路径和.cpp" />
    <ClCompile Include="121. 买卖股票的最佳时机.cpp" />
    <ClCompile Include="122. 买卖股票的最佳时机 II.cpp" />
    <ClCompile Include="[2×]124. 二叉树中的最大路径和.cpp" />
    <ClCompile Include="[2]129. 求根到叶子节点数字之和.cpp" />
    <ClCompile Include="[2]130. 被围绕的区域.cpp" />
    <ClCompile Include="1305. 两棵二叉搜索树中的所有元素.cpp" />
    <ClCompile Include="[2×]133. 克隆图.cpp" />
    <ClCompile Include="134. 加油站.cpp" />
    <ClCompile Include="135. 分发糖果.cpp" />
    <ClCompile Include="1370. 上升下降字符串.cpp" />
    <ClCompile Include="1403. 非递增顺序的最小子序列.cpp" />
    <ClCompile Include="15. 三数之和.cpp" />
    <ClCompile Include="1518. 换酒问题.cpp" />
    <ClCompile Include="1523. 在区间范围内统计奇数数目.cpp" />
    <ClCompile Include="1525. 字符串的好分割数目.cpp" />
    <ClCompile Include="16. 最接近的三数之和.cpp" />
    <ClCompile Include="164. 最大间距.cpp" />
    <ClCompile Include="167. 两数之和 II - 输入有序数组.cpp" />
    <ClCompile Include="169. 多数元素.cpp" />
    <ClCompile Include="179. 最大数.cpp" />
    <ClCompile Include="189. 旋转数组.cpp" />
    <ClCompile Include="[2]198. 打家劫舍.cpp" />
    <ClCompile Include="2. 两数相加.cpp" />
    <ClCompile Include="20. 有效的括号.cpp" />
    <ClCompile Include="[2×]200.岛屿数量.cpp" />
    <ClCompile Include="[2×]199. 二叉树的右视图.cpp" />
    <ClCompile Include="[2×]207. 课程表.cpp" />
    <ClCompile Include="[2×]210. 课程表 II.cpp" />
    <ClCompile Include="[2]213. 打家劫舍 II.cpp" />
    <ClCompile Include="225. 用队列实现栈.cpp" />
    <ClCompile Include="[2×]257. 二叉树的所有路径.cpp" />
    <ClCompile Include="26. 删除排序数组中的重复项.cpp" />
    <ClCompile Include="27. 移除元素.cpp" />
    <ClCompile Include="283. 移动零.cpp" />
    <ClCompile Include="31. 下一个排列.cpp" />
    <ClCompile Include="315. 计算右侧小于当前元素的个数.cpp" />
    <ClCompile Include="394. 字符串解码.cpp" />
    <ClCompile Include="%28难%2933. 搜索旋转排序数组.cpp" />
    <ClCompile Include="330. 按要求补齐数组(看不懂).cpp" />
    <ClCompile Include="34. 在排序数组中查找元素的第一个和最后一个位置.cpp" />
    <ClCompile Include="35. 搜索插入位置.cpp" />
    <ClCompile Include="39. 组合总和.cpp" />
    <ClCompile Include="4. 寻找两个正序数组的中位数.cpp" />
    <ClCompile Include="406. 根据身高重建队列.cpp" />
    <ClCompile Include="41. 缺失的第一个正数.cpp" />
    <ClCompile Include="42. 接雨水.cpp" />
    <ClCompile Include="45. 跳跃游戏 II.cpp" />
    <ClCompile Include="48. 旋转图像.cpp" />
    <ClCompile Include="[2]513. 找树左下角的值.cpp" />
    <ClCompile Include="[2]515. 在每个树行中找最大值.cpp" />
    <ClCompile Include="524. 通过删除字母匹配到字典里最长单词.cpp" />
    <ClCompile Include="53. 最大子序和.cpp" />
    <ClCompile Include="54. 螺旋矩阵.cpp" />
    <ClCompile Include="[2]×542. 01 矩阵.cpp" />
    <ClCompile Include="[2×]547. 省份数量.cpp" />
    <ClCompile Include="5472. 重新排列字符串.cpp" />
    <ClCompile Include="5473. 灯泡开关 IV.cpp" />
    <ClCompile Include="%28精品%295474. 好叶子节点对的数量.cpp" />
    <ClCompile Include="55. 跳跃游戏.cpp" />
    <ClCompile Include="559. N叉树的最大深度.cpp" />
    <ClCompile Include="56. 合并区间.cpp" />
    <ClCompile Include="605. 种花问题.cpp" />
    <ClCompile Include="62. 不同路径.cpp" />
    <ClCompile Include="621. 任务调度器.cpp" />
    <ClCompile Include="63. 不同路径 II.cpp" />
    <ClCompile Include="64. 最小路径和.cpp" />
    <ClCompile Include="66. 加一.cpp" />
    <ClCompile Include="695. 岛屿的最大面积.cpp" />
    <ClCompile Include="75. 颜色分类.cpp" />
    <ClCompile Include="767. 重构字符串.cpp" />
    <ClCompile Include="78. 子集.cpp" />
    <ClCompile Include="785. 判断二分图%28+bfs%29.cpp" />
    <ClCompile Include="973. 最接近原点的 K 个点.cpp" />
    <ClCompile Include="976. 三角形的最大周长.cpp" />
    <ClCompile Include="[2]98. 验证二叉搜索树.cpp" />
    <ClCompile Include="[2]99.恢复二叉树.cpp" />
    <ClCompile Include="binarySearch.cpp" />
    <ClCompile Include="BST.cpp" />
    <ClCompile Include="bubbleSort.cpp" />
    <ClCompile Include="bucketSort.cpp" />
    <ClCompile Include="dfs_adjacencyList.cpp" />
    <ClCompile Include="dfs_adjacencyMatrix.cpp" />
    <ClCompile Include="Dijkstra_AdjacencyMatrix.cpp" />
    <ClCompile Include="Dijkstra_STL.cpp" />
    <ClCompile Include="heapSort.cpp" />
    <ClCompile Include="quickSort.cpp" />
    <ClCompile Include="topologicalSort.cpp" />
    <ClCompile Include="剑指 Offer 29. 顺时针打印矩阵.cpp" />
    <ClCompile Include="剑指 Offer 03. 数组中重复的数字.cpp" />
    <ClCompile Include="剑指 Offer 04. 二维数组中的查找.cpp" />
    <ClCompile Include="剑指 Offer 05. 替换空格.cpp" />
    <ClCompile Include="剑指 Offer 06. 从尾到头打印链表.cpp" />
    <ClCompile Include="剑指 Offer 07. 重建二叉树.cpp" />
    <ClCompile Include="剑指 Offer 08. 二叉树的下一个节点.cpp" />
    <ClCompile Include="剑指 Offer 09. 用两个栈实现队列.cpp" />
    <ClCompile Include="剑指 Offer 10- I. 斐波那契数列.cpp" />
    <ClCompile Include="剑指 Offer 11. 旋转数组的最小数字.cpp" />
    <ClCompile Include="剑指 Offer 12. 矩阵中的路径.cpp" />
    <ClCompile Include="剑指 Offer 13. 机器人的运动范围.cpp" />
    <ClCompile Include="剑指 Offer 14- I. 剪绳子.cpp" />
    <ClCompile Include="剑指 Offer 14- II. 剪绳子 II.cpp" />
    <ClCompile Include="剑指 Offer 15. 二进制中1的个数.cpp" />
    <ClCompile Include="剑指 Offer 16. 数值的整数次方.cpp" />
    <ClCompile Include="剑指 Offer 17. 打印从1到最大的n位数.cpp" />
    <ClCompile Include="剑指 Offer 18. 删除链表的节点.cpp" />
    <ClCompile Include="剑指 Offer 19. 正则表达式匹配%28难%29.cpp" />
    <ClCompile Include="剑指 Offer 20. 表示数值的字符串.cpp" />
    <ClCompile Include="剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.cpp" />
    <ClCompile Include="剑指 Offer 22. 链表中倒数第k个节点.cpp" />
    <ClCompile Include="剑指 Offer 24. 反转链表.cpp" />
    <ClCompile Include="剑指 Offer 25. 合并两个排序的链表.cpp" />
    <ClCompile Include="剑指 Offer 30. 包含min函数的栈.cpp" />
    <ClCompile Include="剑指 Offer 31. 栈的压入、弹出序列.cpp" />
    <ClCompile Include="剑指 Offer 33. 二叉搜索树的后序遍历序列.cpp" />
    <ClCompile Include="剑指 Offer 34. 二叉树中和为某一值的路径.cpp" />
    <ClCompile Include="剑指 Offer 35. 复杂链表的复制.cpp" />
    <ClCompile Include="剑指 Offer 36. 二叉搜索树与双向链表.cpp" />
    <ClCompile Include="剑指 Offer 37. 序列化二叉树.cpp" />
    <ClCompile Include="剑指 Offer 38. 字符串的排列.cpp" />
    <ClCompile Include="剑指 Offer 40. 最小的k个数.cpp" />
    <ClCompile Include="剑指 Offer 43. 1～n 整数中 1 出现的次数.cpp" />
    <ClCompile Include="剑指 Offer 45. 把数组排成最小的数.cpp" />
    <ClCompile Include="剑指 Offer 46. 把数字翻译成字符串%28经典%29.cpp" />
    <ClCompile Include="剑指 Offer 48. 最长不含重复字符的子字符串.cpp" />
    <ClCompile Include="剑指 Offer 49. 丑数.cpp" />
    <ClCompile Include="剑指 Offer 51. 数组中的逆序对.cpp" />
    <ClCompile Include="剑指 Offer 52. 两个链表的第一个公共节点.cpp" />
    <ClCompile Include="剑指 Offer 53 - I. 在排序数组中查找数字 I.cpp" />
    <ClCompile Include="剑指 Offer 53 - II. 0～n-1中缺失的数字.cpp" />
    <ClCompile Include="剑指 Offer 54. 二叉搜索树的第k大节点.cpp" />
    <ClCompile Include="剑指 Offer 55 - II. 平衡二叉树.cpp" />
    <ClCompile Include="剑指 Offer 63. 股票的最大利润.cpp" />
    <ClCompile Include="剑指 Offer 56 - I. 数组中数字出现的次数.cpp" />
    <ClCompile Include="剑指 Offer 57 - II. 和为s的连续正数序列.cpp" />
    <ClCompile Include="剑指 Offer 57. 和为s的两个数字.cpp" />
    <ClCompile Include="HJ49 多线程输出.cpp" />
    <ClCompile Include="剑指 Offer 58 - II. 左旋转字符串.cpp" />
    <ClCompile Include="剑指 Offer 59 - II. 队列的最大值.cpp" />
    <ClCompile Include="剑指 Offer 60. n个骰子的点数.cpp" />
    <ClCompile Include="剑指 Offer 61. 扑克牌中的顺子.cpp" />
    <ClCompile Include="剑指 Offer 62. 圆圈中最后剩下的数字.cpp" />
    <ClCompile Include="剑指 Offer 65. 不用加减乘除做加法.cpp" />
    <ClCompile Include="剑指 Offer 66. 构建乘积数组.cpp" />
    <ClCompile Include="剑指 Offer 67. 把字符串转换成整数.cpp" />
    <ClCompile Include="剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.cpp" />
    <ClCompile Include="剑指 Offer 68 - II. 二叉树的最近公共祖先.cpp" />
    <ClCompile Include="题目标号.cpp" />
    <ClCompile Include="将字符串转换为整数.cpp" />
    <ClCompile Include="剑指 Offer 01.拷贝赋值运算符.cpp" />
    <ClCompile Include="最长不同字符子串.cpp" />
    <ClCompile Include="模板.cpp" />
    <ClCompile Include="活动安排问题.cpp" />
    <ClCompile Include="深拷贝链表.cpp" />
    <ClCompile Include="素数伴侣[非常难未做].cpp" />
    <ClCompile Include="经典好文.cpp" />
    <ClCompile Include="子串最大和：美团吃寿司.cpp" />
    <ClCompile Include="股票问题通用解法.cpp" />
    <ClCompile Include="链表基本操作.cpp" />
    <ClCompile Include="面试题 01.01. 判定字符是否唯一.cpp" />
    <ClCompile Include="面试题 10.01. 合并排序的数组.cpp" />
    <ClCompile Include="面试题 16.18. 模式匹配.cpp" />
    <ClCompile Include="面试题 17.14. 最小K个数.cpp" />
    <ClCompile Include="面试题45. 把数组排成最小的数.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>